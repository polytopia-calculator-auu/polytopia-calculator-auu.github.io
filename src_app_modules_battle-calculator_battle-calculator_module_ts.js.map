{"version":3,"file":"src_app_modules_battle-calculator_battle-calculator_module_ts.js","mappings":"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YAAD,EAAe;IACtB,KAAKA,YAAL,GAAoBA,YAApB;EACH;;AAHkB;AAKvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,WAAN,CAAkB;EACdxU,WAAW,GAAG;IACV,KAAK6O,GAAL,GAAW,IAAIM,GAAJ,EAAX;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIgB,GAAG,CAACsE,KAAD,EAAQ9Q,KAAR,EAAe;IACd,KAAKkL,GAAL,CAASsB,GAAT,CAAasE,KAAb,EAAoB9Q,KAApB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI0D,GAAG,CAACoN,KAAD,EAAQ;IACP,IAAI,CAAC,KAAK5F,GAAL,CAASoB,GAAT,CAAawE,KAAb,CAAL,EAA0B;MACtB,KAAK5F,GAAL,CAASsB,GAAT,CAAasE,KAAb,EAAoBA,KAAK,CAACF,YAAN,EAApB;IACH;;IACD,OAAO,KAAK1F,GAAL,CAASxH,GAAT,CAAaoN,KAAb,CAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIxD,MAAM,CAACwD,KAAD,EAAQ;IACV,KAAK5F,GAAL,CAASoC,MAAT,CAAgBwD,KAAhB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIxE,GAAG,CAACwE,KAAD,EAAQ;IACP,OAAO,KAAK5F,GAAL,CAASoB,GAAT,CAAawE,KAAb,CAAP;EACH;EACD;AACJ;AACA;;;EACIlE,IAAI,GAAG;IACH,OAAO,KAAK1B,GAAL,CAAS0B,IAAT,EAAP;EACH;;AAvDa;AA0DlB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,SAASmE,aAAT,CAAuBC,MAAvB,EAA+B;EAC3B,QAAQA,MAAR;IACI,KAAK,QAAL;IACA,KAAK,KAAL;IACA,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AL,GAAgB,mCAAkC3G,IAAI,CAAC2E,GAAL,IAAY,eAAgB,EAA9E;IACH,CAFD,MAGK;MACD,KAAKgC,OAAL,GAAgB,6BAA4B3G,IAAI,CAAC2E,GAAL,IAAY,eAAgB,KAAI3E,IAAI,CAACmG,MAAO,IAAGnG,IAAI,CAACoG,UAAW,EAA3G;IACH;;IACD,KAAKQ,KAAL,GAAa5G,IAAI,CAAC4G,KAAL,IAAc,IAA3B;EACH;;AAnB4C;AAsBjD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiB/D,OAAjB,EAA0BgC,IAA1B,EAAgC;EAC5B,OAAO;IACHA,IADG;IAEHvG,OAAO,EAAEuE,OAAO,CAACvE,OAFd;IAGH4G,OAAO,EAAErC,OAAO,CAACqC,OAHd;IAIH2B,OAAO,EAAEhE,OAAO,CAACgE,OAJd;IAKH9E,MAAM,EAAEc,OAAO,CAACd,MALb;IAMH+C,cAAc,EAAEjC,OAAO,CAACiC,cANrB;IAOHE,YAAY,EAAEnC,OAAO,CAACmC,YAPnB;IAQHD,eAAe,EAAElC,OAAO,CAACkC;EARtB,CAAP;AAUH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+B,UAAN,CAAiB;EACbzX,WAAW,CAAC0X,OAAD,EAAU;IACjB,KAAKA,OAAL,GAAeA,OAAf;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,OAAO,CAACC,KAAD,EAAQvC,GAA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","sources":["./src/app/data/donors.const.ts","./src/app/data/unit-codes.const.ts","./src/app/models/unit-data.model.ts","./src/app/modules/battle-calculator/about/about.component.ts","./src/app/modules/battle-calculator/about/about.component.html","./src/app/modules/battle-calculator/battle-calculator.module.ts","./src/app/modules/battle-calculator/battle-calculator.page.ts","./src/app/modules/battle-calculator/battle-calculator.page.html","./src/app/modules/battle-calculator/battle/battle.component.ts","./src/app/modules/battle-calculator/battle/battle.component.html","./src/app/modules/battle-calculator/br-modal/br-modal.component.ts","./src/app/modules/battle-calculator/br-modal/br-modal.component.html","./src/app/modules/battle-calculator/code/code.component.ts","./src/app/modules/battle-calculator/code/code.component.html","./src/app/modules/battle-calculator/one-on-one/one-one-one.component.ts","./src/app/modules/battle-calculator/one-on-one/one-on-one.component.html","./src/app/modules/shared/battle-result-mini/battle-result-mini.component.ts","./src/app/modules/shared/battle-result-mini/battle-result-mini.component.html","./src/app/modules/shared/battle-result/battle-result.component.ts","./src/app/modules/shared/battle-result/battle-result.component.html","./src/app/modules/shared/donate-button/donate-button.component.ts","./src/app/modules/shared/donate-button/donate-button.component.html","./src/app/modules/shared/shared.module.ts","./src/app/modules/shared/unit-form/unit-form.component.ts","./src/app/modules/shared/unit-form/unit-form.component.html","./src/app/services/google-analytics.service.ts","./src/app/validators/carried-unit.validator.ts","./src/app/validators/max-hp.validator.ts","./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./node_modules/@angular/common/fesm2020/http.mjs"],"sourcesContent":["export const donors = [\r\n  \"Dane Šoba\",\r\n  \"Bret Snow\",\r\n  \"Jason Flick\",\r\n  \"Arthur Lejars\",\r\n  \"Luca Accomazzi\",\r\n  \"Spencer Renfro\"\r\n];","export const unitCodes = {\r\n  wa: 'Warrior',\r\n  ri: 'Rider',\r\n  ar: 'Archer',\r\n  de: 'Defender',\r\n  kn: 'Knight',\r\n  ok: 'Old Knight',\r\n  sw: 'Swordsman',\r\n  ca: 'Catapult',\r\n  gi: 'Giant',\r\n  cr: 'Crab',\r\n  tr: 'Tridention',\r\n  po: 'Polytaur',\r\n  na: 'Navalon',\r\n  ga: 'Gaami',\r\n  mb: 'Mind Bender',\r\n  eg: 'Dragon Egg',\r\n  bd: 'Baby Dragon',\r\n  dr: 'Fire Dragon',\r\n  mo: 'Mooni',\r\n  sl: 'Battle Sled',\r\n  if: 'Ice Fortress',\r\n  ia: 'Ice Archer',\r\n  sm: 'Shaman',\r\n  he: 'Hexapod',\r\n  ki: 'Kiton',\r\n  ko: 'Old Kiton',\r\n  ph: 'Phychi',\r\n  ex: 'Exida',\r\n  ra: 'Raychi',\r\n  do: 'Doomux',\r\n  ce: 'Centipede',\r\n  se: 'Segment',\r\n  da: 'Dagger',\r\n  cl: 'Cloak'\r\n}\r\n\r\nexport const carryUnitCodes = {\r\n  bo:'Boat',\r\n  sh:'Ship',\r\n  bs:'Battleship',\r\n}\r\n\r\nexport const modifierCodes = {\r\n  p: 'Poisoned',\r\n  b: 'Boosted',\r\n  // x: 'Exploding',\r\n  v: 'Veteran',\r\n  nr: 'No Retaliation',\r\n  d: '1.5x Def bonus ',\r\n  w: '4x Def bonus (City Wall)',\r\n}","import { unitStats } from '../data/unit-stats.const';\r\n\r\nexport interface AttackerData {\r\n    hp: number;\r\n    isVeteran: boolean;\r\n    isBoosted?: boolean;\r\n    isPoisoned?: boolean;\r\n    freeFromRetaliation: boolean;\r\n    unit: string;\r\n    carriedUnit: string;\r\n}\r\n\r\nexport type DefenderData = AttackerData & {\r\n    withDefenseBonus: 'withWall' | 'withoutWall';\r\n};\r\n\r\nexport interface UnitStat {\r\n    attack: number;\r\n    defense: number;\r\n    hp: number;\r\n    veteranHp: number;\r\n    defenseBonus: number;\r\n    wallBonus: number;\r\n}\r\n\r\nexport enum UnitFormType {\r\n    ATTACKER = 'attacker',\r\n    DEFENDER = 'defender',\r\n}","import { Component, OnInit } from '@angular/core';\nimport { donors as DONORS} from '../../../data/donors.const';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit {\n  donors = DONORS;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('https://api.jsonbin.io/v3/b/63579d340e6a79321e33d0c6', {\n      headers: {\n        'X-Access-key': '$2b$10$nQOf93Atg5wJAhGNNjQzxeMgVzWw9dGRn59AZUVGdk7D/sAsojGii'\n      }\n    }).subscribe((data: any) => {\n      if (data?.record) {\n        this.donors = data.record;\n      }\n    });\n  }\n\n}\n","\n<br>\n<ion-title>Thanks for donating <ion-icon name=\"heart\" style=\"color: red;\"></ion-icon></ion-title>\n<div class=\"donors-list\">\n  <ion-list lines=\"none\">\n    <ion-item *ngFor=\"let donor of donors\">\n      <ion-label>{{donor}}</ion-label>\n    </ion-item>\n  </ion-list>\n</div>\n  \n<br>\n<ion-title>Creator</ion-title>\n<ion-list lines=\"none\">\n  <ion-item>\n    <ion-label><a href=\"https://discordapp.com/users/692361022190780436\">NarelTheDev</a></ion-label>\n  </ion-item>\n</ion-list>\n\n<br>\n<ion-note>Calculation logic updated as of v2.2.9.8251 <br> of the actual game \"The Battle of Polytopia\".</ion-note>\n<br>\n<br>\n<app-donate-button></app-donate-button>\n<br>\n<!-- <ion-list>\n  <ion-list-header>\n    <ion-title>Special thanks to:</ion-title>\n  </ion-list-header>\n  <ion-item>\n    <ion-label>Sherlock</ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-label>Adobo Sagata</ion-label>\n  </ion-item>\n</ion-list> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BattleCalculatorPage } from './battle-calculator.page';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { OneOnOneComponent } from './one-on-one/one-one-one.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BattleComponent } from './battle/battle.component';\r\nimport { BrModalComponent } from './br-modal/br-modal.component';\r\nimport { CodeComponent } from './code/code.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        IonicModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        SharedModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                component: BattleCalculatorPage\r\n            }\r\n        ]),\r\n    ],\r\n    declarations: [BattleCalculatorPage, OneOnOneComponent, BattleComponent, BrModalComponent, CodeComponent, AboutComponent]\r\n})\r\nexport class BattleCalculatorPageModule {}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { IonContent, IonSlides, IonSegment, ModalController } from '@ionic/angular';\r\nimport { BattleComponent } from './battle/battle.component';\r\nimport { BrModalComponent } from './br-modal/br-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-battle-calculator',\r\n  templateUrl: './battle-calculator.page.html',\r\n  styleUrls: ['./battle-calculator.page.scss'],\r\n})\r\nexport class BattleCalculatorPage implements OnInit, AfterViewInit {\r\n  @ViewChild('ionContent', { static: true }) ionContent: IonContent;\r\n  @ViewChild('ionSlides', { static: true }) ionSlides: IonSlides;\r\n  @ViewChild('ionSegment', { static: true }) ionSegment: IonSegment;\r\n  @ViewChild('battle', { static: true }) battleComponent: BattleComponent;\r\n\r\n  modal: HTMLIonModalElement;\r\n  isShowingModalInProgress: boolean;\r\n\r\n  // onTop = true;\r\n  activeSlideIndex =  parseInt(localStorage.getItem('activeSlideIndex')) || 0;\r\n  // isContentScrollable = false;\r\n  slideOpts = {\r\n    allowTouchMove: false,\r\n    autoHeight: true\r\n  }\r\n\r\n  oneOnOneData: any;\r\n  battleData: any;\r\n  codeData: any;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private modalController: ModalController,\r\n    private elRef: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngAfterViewInit() {\r\n    // await this.checkIfScrollable();\r\n  }\r\n\r\n  onOneOnOneChange(data) {\r\n    this.oneOnOneData = data;\r\n    // this.cdr.detectChanges();\r\n    // await this.checkIfScrollable();\r\n  }\r\n\r\n  onBattleChange(data) {\r\n    this.battleData = data;\r\n    // this.cdr.detectChanges();\r\n    // await this.checkIfScrollable();\r\n  }\r\n  onCodeChange(data) {\r\n    this.codeData = data;\r\n    // this.cdr.detectChanges();\r\n    // await this.checkIfScrollable();\r\n  }\r\n\r\n  scrollToBattleResult() {\r\n    if (this.isOneOnOne) {\r\n      this.ionContent.scrollToBottom(100)\r\n    } else {\r\n      const battleResultEl = this.elRef.nativeElement.querySelector('app-battle .optimal-result-block');\r\n      battleResultEl && battleResultEl.scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\r\n    }\r\n  }\r\n\r\n  get isExecutingBattleMatches() {\r\n    if (this.isOneOnOne) {\r\n      return false;\r\n    } else {\r\n      return this.battleComponent.isExecutingBattleMatches;\r\n    }\r\n  }\r\n\r\n  get isOneOnOne() {\r\n    return this.activeSlideIndex === 1;\r\n  }\r\n  get isBattle() {\r\n    return this.activeSlideIndex === 2;\r\n  }\r\n  get isCode() {\r\n    return this.activeSlideIndex === 0;\r\n  }\r\n\r\n  get resultData() {\r\n    if (this.isOneOnOne) {\r\n      return this.oneOnOneData || {};\r\n    } else if (this.isBattle) {\r\n      return this.battleData || {};\r\n    } else if (this.isCode){\r\n      return this.codeData || {};\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // async checkIfScrollable() {\r\n  //   const scrollableElement = await this.ionContent.getScrollElement();\r\n  //   this.isContentScrollable = scrollableElement.scrollHeight > scrollableElement.clientHeight;\r\n  //   this.cdr.detectChanges();\r\n  // }\r\n\r\n\r\n  // toggleScroll() {\r\n  //   if (this.onTop) {\r\n  //     this.ionContent.scrollToBottom(100);\r\n  //     this.onTop = false;\r\n  //   } else {\r\n  //     this.ionContent.scrollToTop(100);\r\n  //     this.onTop = true;\r\n  //   }\r\n  // }\r\n\r\n  // async onScroll() {\r\n  //   const scrollableElement = await this.ionContent.getScrollElement();\r\n  //   if (scrollableElement.scrollTop > 0) {\r\n  //     this.onTop = false;\r\n  //   } else {\r\n  //     this.onTop = true;\r\n  //   }\r\n  // }\r\n\r\n  async onSlideChange() {\r\n    this.activeSlideIndex = await this.ionSlides.getActiveIndex();\r\n    localStorage.setItem('activeSlideIndex', this.activeSlideIndex + '');\r\n  }\r\n\r\n  // hasOneOnOneResult() {\r\n  //   return this.oneOnOneData && this.oneOnOneData.battleResults;\r\n  // }\r\n\r\n  // hasBattleResult() {\r\n  //   return this.battleData && this.battleData.battleResults;\r\n  // }\r\n\r\n  // showBattleResultButton() {\r\n  //   if (this.activeSlideIndex === 0) {\r\n  //     return this.hasOneOnOneResult();\r\n  //   } else {\r\n  //     return this.hasBattleResult();\r\n  //   }\r\n  // }\r\n\r\n  async showBattleResultModal(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.isShowingModalInProgress || this.resultData.isInvalid) {\r\n      return;\r\n    }\r\n\r\n    this.isShowingModalInProgress = true;\r\n\r\n    const data = this.resultData;\r\n    if (!this.isOneOnOne) {\r\n      data.multi = true;\r\n    }\r\n    this.modal = await this.modalController.create({\r\n      component: BrModalComponent,\r\n      cssClass: 'br-modal',\r\n      mode: 'ios',\r\n      componentProps: data,\r\n      swipeToClose: true,\r\n      showBackdrop: true,\r\n      backdropDismiss: true\r\n    });\r\n    await this.modal.present();\r\n    this.isShowingModalInProgress = false;\r\n  }\r\n  \r\n\r\n  onSegmentChange(event) {\r\n    this.ionSlides.slideTo(event.detail.value);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title slot=\"start\">Polytopia<br>Calculator</ion-title>\r\n    <ion-segment slot=\"end\" (ionChange)=\"onSegmentChange($event)\" class=\"mode-toggle\" #ionSegment [value]=\"activeSlideIndex\" [scrollable]=\"true\">\r\n      <ion-segment-button value=\"0\">\r\n        Code\r\n      </ion-segment-button>\r\n      <ion-segment-button value=\"1\">\r\n        Simple\r\n      </ion-segment-button>\r\n      <ion-segment-button value=\"2\">\r\n        Battle\r\n      </ion-segment-button>\r\n      <ion-segment-button value=\"3\" layout=\"label-hide\">\r\n        <ion-icon name=\"heart\" style=\"color: red;\"></ion-icon>\r\n      </ion-segment-button>\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content #ionContent [scrollEvents]=\"true\">\r\n\r\n  <ion-slides (ionSlideWillChange)=\"onSlideChange()\" #ionSlides [options]=\"slideOpts\">\r\n    <ion-slide>\r\n      <app-code (resultChange)=\"onCodeChange($event)\"></app-code>\r\n    </ion-slide>\r\n    <ion-slide>\r\n      <app-one-on-one (resultChange)=\"onOneOnOneChange($event)\"></app-one-on-one>\r\n    </ion-slide>\r\n    <ion-slide>\r\n      <app-battle #battle (resultChange)=\"onBattleChange($event)\"></app-battle>\r\n    </ion-slide>\r\n    <ion-slide>\r\n      <app-about></app-about>\r\n    </ion-slide>\r\n  </ion-slides>\r\n\r\n  <!-- <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" class=\"show-battle-result\">\r\n    <ion-fab-button (click)=\"scrollToBattleResult()\"  color=\"medium\">\r\n      <ion-thumbnail class=\"swords-icon\"><img src=\"assets/other/BigSwords.png\"/></ion-thumbnail>\r\n    </ion-fab-button>\r\n  </ion-fab>\r\n  -->\r\n<!-- \r\n<ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\" *ngIf=\"isContentScrollable\" class=\"fab-scroll-toggle\">\r\n<ion-fab-button (click)=\"toggleScroll()\" color=\"medium\">\r\n  <ion-icon name=\"arrow-down-outline\" *ngIf=\"onTop\"></ion-icon>\r\n  <ion-icon name=\"arrow-up-outline\" *ngIf=\"!onTop\"></ion-icon>\r\n</ion-fab-button>\r\n</ion-fab> -->\r\n</ion-content>\r\n<ion-footer *ngIf=\"resultData.battleResults\">\r\n  <app-battle-result-mini tappable class=\"battle-result-sticky\" (touchstart)=\"!isExecutingBattleMatches && showBattleResultModal($event)\" (mousedown)=\"!isExecutingBattleMatches && showBattleResultModal($event)\"\r\n   [isInvalid]=\"resultData.isInvalid\" [isExecutingBattleMatches]=\"isExecutingBattleMatches\" [battleResultStatistics]=\"resultData.battleResultStatistics\"></app-battle-result-mini>\r\n   \r\n</ion-footer>\r\n","import { ChangeDetectorRef, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { unitStats } from '../../../data/unit-stats.const';\r\nimport { GoogleAnalyticsService } from '../../../services/google-analytics.service';\r\nimport { carriedUnitValidator } from '../../../validators/carried-unit.validator';\r\nimport { maxHpValidator } from '../../../validators/max-hp.validator';\r\nimport { \r\n  attackerUnits as ATTACKER_UNITS,\r\n  defenderUnits as DEFENDER_UNITS,\r\n  landUnits as LAND_UNITS\r\n} from '../../../data/unit-list.const';\r\nimport { BattleResult, BattleResultStatistic } from '../../../models/battle-result.model';\r\nimport { executeBattleMatches } from '../../../utils/execute-battle-matches.util';\r\nimport { UnitFormType } from '../../../models/unit-data.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-battle',\r\n  templateUrl: './battle.component.html',\r\n  styleUrls: ['./battle.component.scss'],\r\n})\r\nexport class BattleComponent implements OnInit {\r\n\r\n  attackerUnits: string[] = ATTACKER_UNITS;\r\n  defenderUnits: string[] = DEFENDER_UNITS;\r\n  landUnits: string[] = LAND_UNITS;\r\n  battleForm: UntypedFormGroup;\r\n  battleResults: BattleResult[];\r\n  battleResultStatistics: BattleResultStatistic;\r\n  isExecutingBattleMatches: boolean;\r\n\r\n  @Output() resultChange = new EventEmitter<{ \r\n    battleResults?: BattleResult[],\r\n    battleResultStatistics?: BattleResultStatistic,\r\n    showingOptimalResult?: boolean,\r\n    isInvalid: boolean\r\n  }>();\r\n\r\n  private onDestroy$ = new Subject<void>();\r\n  \r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private googleAnalytics: GoogleAnalyticsService\r\n  ) {\r\n\r\n    this.battleForm = this.fb.group({\r\n      attackers: fb.array([this.createAttackerForm()]),\r\n      defenders: fb.array([this.createDefenderForm()]),\r\n      getOptimalResult: false\r\n    });\r\n\r\n    this.battleForm.valueChanges\r\n      .pipe(\r\n        startWith(this.battleForm.value),\r\n        debounceTime(300),\r\n        takeUntil(this.onDestroy$),\r\n        tap(() => {\r\n          this.isExecutingBattleMatches = true;\r\n        }),\r\n        switchMap(() => this.showBattleResults())\r\n      )\r\n      .subscribe(({ battleResults = [], battleResultStatistics, isInvalid }) => {\r\n        this.battleResults = battleResults;\r\n        this.battleResultStatistics = battleResultStatistics;\r\n        const showingOptimalResult = this.battleForm.get('getOptimalResult').value;\r\n        this.resultChange.emit({ battleResults, battleResultStatistics, showingOptimalResult, isInvalid });\r\n        this.isExecutingBattleMatches = false;\r\n        this.cdr.detectChanges();\r\n      })\r\n  }\r\n\r\n  get attackerForms() {\r\n    return (this.battleForm.get('attackers') as UntypedFormArray).controls;\r\n  }\r\n\r\n  get defenderForms() {\r\n    return (this.battleForm.get('defenders') as UntypedFormArray).controls;\r\n  }\r\n\r\n  createAttackerForm() {\r\n    const attacker = this.attackerUnits[0];\r\n    const attackerStat = unitStats[attacker];\r\n    const carriedUnit = this.landUnits[0];\r\n\r\n    return this.fb.group({\r\n        unit: attacker,\r\n        carriedUnit: carriedUnit,\r\n        hp: [attackerStat.hp, [Validators.required, Validators.min(0)]],\r\n        isVeteran: false,\r\n        freeFromRetaliation: false,\r\n        isBoosted: false,\r\n        spawnCount: [1, Validators.min(1)]\r\n      }, { validators: [maxHpValidator, carriedUnitValidator] })\r\n  }\r\n\r\n  createDefenderForm() {\r\n    const defender = this.defenderUnits[0];\r\n    const defenderStat = unitStats[defender];\r\n    const carriedUnit = this.landUnits[0];\r\n\r\n    return this.fb.group({\r\n      unit: defender,\r\n      carriedUnit: carriedUnit,\r\n      hp: [defenderStat.hp, [Validators.required, Validators.min(0)]],\r\n      isVeteran: false,\r\n      withDefenseBonus: false,\r\n      withWallBonus: false,\r\n      isPoisoned: false,\r\n      spawnCount: [1, Validators.min(1)]\r\n    }, { validators: [maxHpValidator, carriedUnitValidator] })\r\n  }\r\n\r\n  addOffenseUnit() {\r\n    (this.battleForm.get('attackers') as UntypedFormArray).push(this.createAttackerForm());\r\n  }\r\n  addDefenseUnit() {\r\n    (this.battleForm.get('defenders') as UntypedFormArray).push(this.createDefenderForm());\r\n  }\r\n\r\n  removeOffenseUnit(i) {\r\n    (this.battleForm.get('attackers') as UntypedFormArray).removeAt(i);\r\n  }\r\n  removeDefenseUnit(i) {\r\n    (this.battleForm.get('defenders') as UntypedFormArray).removeAt(i);\r\n  }\r\n\r\n  move(unitFormType: 'attacker' | 'defender', currentIndex: number, shift: number) {\r\n    const formArrayName = unitFormType === UnitFormType.ATTACKER ? 'attackers' : 'defenders';\r\n    const formArray =  this.battleForm.get(formArrayName) as UntypedFormArray;\r\n\r\n    let newIndex: number = currentIndex + shift;\r\n    if(newIndex === -1 || newIndex == formArray.length) {\r\n      return;\r\n    }\r\n    const currentFormGroup = formArray.at(currentIndex);\r\n    formArray.removeAt(currentIndex);\r\n    formArray.insert(newIndex, currentFormGroup)\r\n  }\r\n\r\n  moveUp(unitFormType: 'attacker' | 'defender', currentIndex: number) {\r\n    this.move(unitFormType, currentIndex, -1);\r\n  }\r\n  moveDown(unitFormType: 'attacker' | 'defender', currentIndex: number) {\r\n    this.move(unitFormType, currentIndex, 1);\r\n  }\r\n\r\n  toggleGetOptimalResult() {\r\n    const currentValue = this.battleForm.get('getOptimalResult').value;\r\n    this.battleForm.get('getOptimalResult').setValue(!currentValue);\r\n  }\r\n\r\n  showBattleResults() {\r\n    return new Observable((subscriber) => {\r\n      if (!this.battleForm.valid) {\r\n        subscriber.next({ isInvalid: true });\r\n        subscriber.complete();\r\n        return;\r\n      }\r\n\r\n      const attackers = this.getUnits('attackers');\r\n      const defenders = this.getUnits('defenders');\r\n\r\n\r\n      this.googleAnalytics.emitEvent(\r\n        'battle calculate', 'method', `${attackers.map(attacker => attacker.unit).join(', ')} vs ${defenders.map(defender => defender.unit).join(', ')}`,\r\n        { attackers: attackers, defenders: defenders }, 1);\r\n\r\n      const getOptimalResult = this.battleForm.get('getOptimalResult').value;\r\n\r\n      if (typeof Worker !== 'undefined') {\r\n        // Create a new\r\n        const battleMatchesWorker = new Worker(new URL('./battle.worker', import.meta.url), { type: 'module' });\r\n        battleMatchesWorker.onmessage = ({ data }) => {\r\n          subscriber.next(data);\r\n          subscriber.complete();\r\n          battleMatchesWorker.terminate();\r\n        };\r\n        battleMatchesWorker.postMessage({attackers, defenders, getOptimalResult});\r\n\r\n        return {\r\n          unsubscribe: () => {\r\n            subscriber.complete();\r\n            battleMatchesWorker.terminate();\r\n          }\r\n        }\r\n      } else {\r\n        // Web Workers are not supported in this environment.\r\n        // You should add a fallback so that your program still executes correctly.\r\n        subscriber.next(executeBattleMatches(attackers, defenders, getOptimalResult));\r\n        subscriber.complete();  \r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getUnits(unitType: 'attackers' | 'defenders') {\r\n    const units = [];\r\n    this.battleForm.get(unitType).value.forEach((unit) => {\r\n      for (let i = 0; i < unit.spawnCount; i++) {\r\n        units.push({...unit});\r\n      }\r\n    });\r\n    return units;\r\n  }\r\n\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n}\r\n\r\n","<form [formGroup]=\"battleForm\">\r\n  <div class=\"two-column-wrapper\">\r\n\r\n    <ion-list>\r\n      <ion-item-divider>\r\n        <ion-title>Offense Units</ion-title>\r\n      </ion-item-divider>\r\n      <ng-container formArrayName=\"attackers\" *ngFor=\"let attacker of attackerForms; let i=index; let isLast = last; let isFirst = first\">\r\n        <app-unit-form [formGroupName]=\"i\" unitFormType=\"attacker\" [multi]=true></app-unit-form>\r\n        <ion-item *ngIf=\"attackerForms.length > 1 && !battleForm.get('getOptimalResult').value\">\r\n          <div class=\"half-width\" [class.disabled]=\"isFirst\" (click)=\"moveUp('attacker', i)\">\r\n            Move up\r\n            <ion-icon name=\"arrow-up-circle-outline\" size=\"medium\"></ion-icon>\r\n          </div>\r\n          <div class=\"half-width\"  [class.disabled]=\"isLast\" (click)=\"moveDown('attacker', i)\">\r\n            Move down\r\n            <ion-icon name=\"arrow-down-circle-outline\" size=\"medium\"></ion-icon>\r\n          </div>\r\n        </ion-item>\r\n        <ion-item color=\"danger\" *ngIf=\"attackerForms.length > 1\" (click)=\"removeOffenseUnit(i)\">\r\n          <ion-icon class=\"delete-icon\" name=\"trash-bin-outline\"></ion-icon>\r\n        </ion-item>\r\n        <ion-item-divider *ngIf=\"!isLast\">\r\n        </ion-item-divider>\r\n      </ng-container>\r\n\r\n      <ion-item color=\"success\" (click)=\"addOffenseUnit()\">\r\n        <ion-icon class=\"add-icon\" src=\"/assets/add-circle-outline.svg\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n    <ion-list>\r\n      <ion-item-divider>\r\n        <ion-title>Defense Units</ion-title>\r\n      </ion-item-divider>\r\n      <ng-container formArrayName=\"defenders\" *ngFor=\"let defender of defenderForms; let i=index; let isLast = last; let isFirst = first\">\r\n        <app-unit-form [formGroupName]=\"i\" unitFormType=\"defender\" [multi]=\"true\"></app-unit-form>\r\n        <ion-item *ngIf=\"defenderForms.length > 1 && !battleForm.get('getOptimalResult').value\">\r\n          <div class=\"half-width\"  [class.disabled]=\"isFirst\" (click)=\"moveUp('defender', i)\">\r\n            Move up\r\n            <ion-icon name=\"arrow-up-circle-outline\" size=\"medium\"></ion-icon>\r\n          </div>\r\n          <div class=\"half-width\"  [class.disabled]=\"isLast\" (click)=\"moveDown('defender', i)\">\r\n            Move down\r\n            <ion-icon name=\"arrow-down-circle-outline\" size=\"medium\"></ion-icon>\r\n          </div>\r\n        </ion-item>\r\n        <ion-item color=\"danger\" *ngIf=\"defenderForms.length > 1\" (click)=\"removeDefenseUnit(i)\">\r\n          <ion-icon class=\"delete-icon\" src=\"/assets/trash-bin-outline.svg\"></ion-icon>\r\n        </ion-item>        \r\n        <ion-item-divider *ngIf=\"!isLast\">\r\n        </ion-item-divider>\r\n      </ng-container>\r\n      <ion-item color=\"success\" (click)=\"addDefenseUnit()\">\r\n        <ion-icon class=\"add-icon\" src=\"/assets/add-circle-outline.svg\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n  </div>\r\n  <div class=\"optimal-result-block\">\r\n    <ion-checkbox formControlName=\"getOptimalResult\"></ion-checkbox>\r\n    <ion-label (click)=\"toggleGetOptimalResult()\">Get most optimal result</ion-label><br>\r\n    <ion-note>Note: Uncheck this if battle execution takes too long due to high number of units, unchecking this will then execute the moves in the order units are entered.</ion-note>\r\n  </div>\r\n</form>\r\n<!-- <app-battle-result *ngIf=\"battleResults && !isExecutingBattleMatches\" [multi]=\"true\"\r\n  [battleResults]=\"battleResults\" [battleResultStatistics]=\"battleResultStatistics\" [showingOptimalResult]=\"battleForm.get('getOptimalResult').value\"></app-battle-result> -->\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { BattleResult, BattleResultStatistic } from '../../../models/battle-result.model';\r\n\r\n@Component({\r\n  selector: 'app-br-modal',\r\n  templateUrl: './br-modal.component.html',\r\n  styleUrls: ['./br-modal.component.scss'],\r\n})\r\nexport class BrModalComponent implements OnInit {\r\n  @Input() battleResults: BattleResult[];\r\n  @Input() battleResultStatistics: BattleResultStatistic[];\r\n  @Input() multi: boolean;\r\n  @Input() showingOptimalResult: boolean;\r\n\r\n  constructor(\r\n    private modalCtrl: ModalController\r\n  ) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  dismiss() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n    <app-battle-result-mini *ngIf=\"battleResultStatistics\" [battleResultStatistics]=\"battleResultStatistics\"></app-battle-result-mini>\r\n</ion-header>\r\n<ion-content>\r\n  <app-battle-result *ngIf=\"battleResults\" [multi]=\"multi\"\r\n  [battleResults]=\"battleResults\" [battleResultStatistics]=\"battleResultStatistics\" [showingOptimalResult]=\"showingOptimalResult\"></app-battle-result>\r\n  <br>\r\n  <br>\r\n  <app-donate-button></app-donate-button>\r\n  <br>\r\n  <ion-button class=\"close-button\" (click)=\"dismiss()\">Close</ion-button>\r\n</ion-content>\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { BattleResultStatistic } from '../../../models/battle-result.model';\nimport { BattleResultComponent } from '../../shared/battle-result/battle-result.component';\nimport { Observable, Subject } from 'rxjs';\nimport { unitCodes as UNIT_BY_CODE, carryUnitCodes as CARRY_UNIT_BY_CODE, modifierCodes as MODIFIERS_BY_CODE } from '../../../data/unit-codes.const';\nimport { landUnits as LAND_UNITS, attackerUnits as ATTACKER_UNITS, defenderUnits as DEFENDER_UNITS } from '../../../data/unit-list.const';\nimport { executeBattleMatches } from '../../../utils/execute-battle-matches.util';\nimport { UntypedFormBuilder } from '@angular/forms';\nimport { debounceTime, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { calculateMaxHp } from 'src/app/utils/calculate-max-hp.util';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.scss'],\n})\nexport class CodeComponent implements OnInit {\n\n  @Output() resultChange = new EventEmitter<{ \n    battleResults?: BattleResultComponent[],\n    battleResultStatistics?: BattleResultStatistic,\n    showingOptimalResult?: boolean,\n    isInvalid: boolean\n  }>();\n\n  @ViewChild('textareaHighlighter', {static: true}) textAreaHighlighter: ElementRef;\n\n  codeForm;\n  errorMessage;\n  unitsByCode = Object.entries(UNIT_BY_CODE).concat(Object.entries(CARRY_UNIT_BY_CODE));\n  modifiersByCode = Object.entries(MODIFIERS_BY_CODE);\n  highlightedText: SafeHtml;\n  private onDestroy$ = new Subject<void>();\n\n  constructor(private fb: UntypedFormBuilder, private cdr: ChangeDetectorRef, private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.codeForm = this.fb.group({\n      code: '',\n      getOptimalResult: false\n    });\n\n\n    this.codeForm.valueChanges\n      .pipe(\n        startWith(this.codeForm.value),\n        debounceTime(300),\n        takeUntil(this.onDestroy$),\n        switchMap(() => this.showBattleResults())\n      )\n      .subscribe(({ battleResults = [], battleResultStatistics, isInvalid }) => {\n        const showingOptimalResult = this.codeForm.get('getOptimalResult').value;\n        this.resultChange.emit({ battleResults, battleResultStatistics, showingOptimalResult, isInvalid });\n        this.cdr.detectChanges();\n      })\n\n      this.codeForm.get('code').valueChanges\n        .pipe(\n          takeUntil(this.onDestroy$)\n        )\n        .subscribe(val => {\n          let highlightedText = val || '';\n          Object.keys(UNIT_BY_CODE).concat(Object.keys(CARRY_UNIT_BY_CODE)).forEach(code => {\n            highlightedText = highlightedText.replaceAll(`${code}`, `<xx>${code}</xx>`);\n          });\n          Object.keys(MODIFIERS_BY_CODE).forEach(code => {\n            highlightedText = highlightedText.replaceAll(` ${code}`, `<x> ${code}</x>`);\n            highlightedText = highlightedText.replaceAll(`${code} `, `<x>${code} </x>`);\n          });\n          highlightedText = highlightedText.replaceAll(\" \", '&nbsp;');\n          highlightedText = highlightedText.replaceAll('<x>', '<mark class=\"modifier\">');\n          highlightedText = highlightedText.replaceAll('</x>', '</mark>');\n          highlightedText = highlightedText.replaceAll('<xx>', '<mark class=\"unit\">');\n          highlightedText = highlightedText.replaceAll('</xx>', '</mark>');\n          highlightedText = highlightedText.replaceAll(\"\\n\", '<br />');\n          this.highlightedText = this.sanitizer.bypassSecurityTrustHtml(highlightedText);\n        });  \n\n  }\n\n  parseAttackers(codes: Array<string>) {\n    \n    const attackers = codes.map(code => {\n      let unit, hp, carriedUnit, carryUnit;\n      const codeParts = code.split(' ').map(c => c.trim());\n      codeParts.forEach((str) =>  {\n        if (CARRY_UNIT_BY_CODE[str]) {\n          carryUnit = CARRY_UNIT_BY_CODE[str];\n        }\n        const unitByCode = UNIT_BY_CODE[str]\n        if (unitByCode && ATTACKER_UNITS.includes(unitByCode)) {\n          unit = unitByCode;\n        } else if (unitByCode && !ATTACKER_UNITS.includes(unitByCode)) {\n          this.errorMessage = `Attacker: ${unit} cannot be an attacker`;\n        }\n        if (Number.isInteger(parseInt(str))) {\n          hp = parseInt(str);\n        }\n      });\n      const isVeteran = codeParts.includes('v');\n      const isBoosted = codeParts.includes('b');\n      const freeFromRetaliation = codeParts.includes('nr');\n      if (carryUnit && !LAND_UNITS.includes(unit)) {\n        this.errorMessage = `Attacker: ${carryUnit} cannot carry ${unit ? unit : 'nothing'}`;\n        return null;\n      } else if (carryUnit && LAND_UNITS.includes(unit)) {\n        carriedUnit = unit;\n        unit = carryUnit;\n      }\n      if (!unit || !hp) {\n        return null;\n      }\n      const attacker =  { unit, carriedUnit, hp, isVeteran, isBoosted, freeFromRetaliation }\n      const maxHp = calculateMaxHp(attacker);\n      if (hp > maxHp) {\n        this.errorMessage = `Attacker: ${unit} exceeds max hp: ${maxHp}`;\n        return null;\n      }\n\n\n      return attacker;\n    });\n    return attackers.filter(val => val !== null);\n  }\n\n  parseDefenders(codes: Array<string>) {\n    const defenders = codes.map(code => {\n      let unit, hp, carriedUnit, carryUnit;\n      const codeParts = code.split(' ').map(c => c.trim());\n      codeParts.forEach((str) =>  {\n        if (CARRY_UNIT_BY_CODE[str]) {\n          carryUnit = CARRY_UNIT_BY_CODE[str];\n        }\n        const unitByCode = UNIT_BY_CODE[str]\n        if (unitByCode && DEFENDER_UNITS.includes(unitByCode)) {\n          unit = unitByCode;\n        } else if (unitByCode && !DEFENDER_UNITS.includes(unitByCode)) {\n          this.errorMessage = `Defender: ${unit} cannot be a defender`;\n        }\n        if (Number.isInteger(parseInt(str))) {\n          hp = parseInt(str);\n        }\n      })\n      const isVeteran = codeParts.includes('v');\n      let withDefenseBonus;\n      if (codeParts.includes('w')) {\n        withDefenseBonus = 'withWall';\n      } else if (codeParts.includes('d')) {        \n        withDefenseBonus = 'withoutWall';\n      }\n      const isPoisoned = codeParts.includes('p');\n      if (carryUnit && !LAND_UNITS.includes(unit)) {\n        this.errorMessage = `Defender: ${carryUnit} cannot carry ${unit ? unit : 'nothing'}`;\n        return null;\n      } else if (carryUnit && LAND_UNITS.includes(unit)) {\n        carriedUnit = unit;\n        unit = carryUnit;\n      }\n      if (!unit || !hp) {\n        return null;\n      }\n      const defender = { unit, carriedUnit, hp, isVeteran, withDefenseBonus, isPoisoned, freeFromRetaliation: false }\n      const maxHp = calculateMaxHp(defender);\n      if (hp > maxHp) {\n        this.errorMessage = `Defender: ${unit} exceeds max hp: ${maxHp}`;\n        return null;\n      }\n      return defender;\n    });\n    return defenders.filter(val => val !== null);\n  }\n\n  showBattleResults() {\n    return new Observable((subscriber) => {\n      const code = this.codeForm.get('code').value || '';\n      const [attackersCodeStr, defendersCodeStr] = code.split(\"\\n\")\n      if (!attackersCodeStr || !defendersCodeStr) {\n        subscriber.next({ isInvalid: true });\n        subscriber.complete();\n        return;\n      };\n      const attackers = this.parseAttackers(attackersCodeStr.split(','));\n      const defenders = this.parseDefenders(defendersCodeStr.split(','));\n      if (attackers.length <= 0 || defenders.length <= 0) {\n        subscriber.next({ isInvalid: true });\n        subscriber.complete();\n        return;\n      };\n\n      this.errorMessage = '';\n\n\n      // this.googleAnalytics.emitEvent(\n      //   'battle calculate', 'method', `${attackers.map(attacker => attacker.unit).join(', ')} vs ${defenders.map(defender => defender.unit).join(', ')}`,\n      //   { attackers: attackers, defenders: defenders }, 1);\n\n      const getOptimalResult = this.codeForm.get('getOptimalResult').value;\n\n      if (typeof Worker !== 'undefined') {\n        // Create a new\n        const battleMatchesWorker = new Worker(new URL('./battle.worker', import.meta.url), { type: 'module' });\n        battleMatchesWorker.onmessage = ({ data }) => {\n          subscriber.next(data);\n          subscriber.complete();\n          battleMatchesWorker.terminate();\n        };\n        battleMatchesWorker.postMessage({attackers, defenders, getOptimalResult});\n\n        return {\n          unsubscribe: () => {\n            subscriber.complete();\n            battleMatchesWorker.terminate();\n          }\n        }\n      } else {\n        // Web Workers are not supported in this environment.\n        // You should add a fallback so that your program still executes correctly.\n        subscriber.next(executeBattleMatches(attackers, defenders, getOptimalResult));\n        subscriber.complete();  \n      }\n    });\n\n  }\n\n  toggleGetOptimalResult() {\n    const currentValue = this.codeForm.get('getOptimalResult').value;\n    this.codeForm.get('getOptimalResult').setValue(!currentValue);\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n}\n","\r\n  <form [formGroup]=\"codeForm\">\r\n    <ion-list>\r\n    <ion-item-divider>\r\n      <ion-title>Type codes to calculate</ion-title>\r\n    </ion-item-divider>\r\n    <ion-item-group>\r\n      <ion-item>\r\n        <ion-label class=\"textarea-label\">Attacker: <br> Defender: </ion-label>\r\n        <ion-textarea formControlName=\"code\" placeholder=\"wa 10, he 5 b &#10; de 15\" ></ion-textarea>\r\n        <div class=\"textarea-highlighter\" #textareaHighlighter [innerHTML]=\"highlightedText\"></div>\r\n      </ion-item>\r\n    </ion-item-group>\r\n  </ion-list>\r\n  <ion-text *ngIf=\"errorMessage\" color=\"danger\" class=\"invalid-text\">\r\n    <ion-icon name=\"alert-circle-outline\"></ion-icon>\r\n    {{errorMessage}}\r\n  </ion-text>\r\n  <ion-text *ngIf=\"!errorMessage\" color=\"medium\" class=\"code-instruction\">\r\n    <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n    Hit enter to set defender unit.<br>\r\n    Format: <mark class=\"unit\">unit</mark> hp&nbsp;<mark class=\"modifier\">modifier</mark>\r\n  </ion-text>\r\n  <!-- <div class=\"optimal-result-block\">\r\n    <ion-checkbox formControlName=\"getOptimalResult\"></ion-checkbox>\r\n    <ion-label (click)=\"toggleGetOptimalResult()\">Get most optimal result</ion-label><br>\r\n    <ion-note>Note: Uncheck this if battle execution takes too long due to high number of units, unchecking this will then execute the moves in the order units are entered.</ion-note>\r\n  </div> -->\r\n</form>\r\n\r\n<div class=\"two-column-wrapper\">\r\n  <ion-list>\r\n    <ion-item-divider>\r\n      <ion-title>Units</ion-title>\r\n    </ion-item-divider>\r\n    <ion-item *ngFor=\"let unitCodes of unitsByCode\"><mark>{{unitCodes[0]}}</mark> {{unitCodes[1]}}</ion-item>\r\n  </ion-list>\r\n  <ion-list>\r\n    <ion-item-divider>\r\n      <ion-title>Modifiers</ion-title>\r\n    </ion-item-divider>\r\n    <ion-item *ngFor=\"let modifierCodes of modifiersByCode\"><mark class=\"modifier\">{{modifierCodes[0]}}</mark> {{modifierCodes[1]}}</ion-item>\r\n  </ion-list>\r\n</div>","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { attackerUnits as ATTACKER_UNITS, defenderUnits as DEFENDER_UNITS, landUnits as LAND_UNITS } from '../../../data/unit-list.const';\r\nimport { maxHpValidator } from '../../../validators/max-hp.validator';\r\nimport { calculateDamage } from '../../../utils/calculate-damage.util';\r\nimport { unitStats } from '../../../data/unit-stats.const';\r\nimport { carriedUnitValidator } from '../../../validators/carried-unit.validator';\r\nimport { GoogleAnalyticsService } from '../../../services/google-analytics.service';\r\nimport { BattleResult, BattleResultStatistic } from '../../../models/battle-result.model';\r\n\r\n@Component({\r\n  selector: 'app-one-on-one',\r\n  templateUrl: 'one-on-one.component.html',\r\n  styleUrls: ['one-on-one.component.scss'],\r\n})\r\nexport class OneOnOneComponent implements OnInit, OnDestroy {\r\n\r\n  attackerUnits: string[] = ATTACKER_UNITS;\r\n  defenderUnits: string[] = DEFENDER_UNITS;\r\n  landUnits: string[] = LAND_UNITS;\r\n  battleResultStatistics: BattleResultStatistic;\r\n\r\n  oneOnOneForm: UntypedFormGroup;\r\n\r\n  battleResult: BattleResult;\r\n  @Output() resultChange = new EventEmitter<{ battleResults?: BattleResult[], battleResultStatistics?: BattleResultStatistic, isInvalid?: boolean}>();\r\n\r\n  private onDestroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private googleAnalytics: GoogleAnalyticsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const attacker = this.attackerUnits[0];\r\n    const attackerStat = unitStats[attacker];\r\n    const defender = this.defenderUnits[0];\r\n    const defenderStat = unitStats[defender];\r\n    const carriedUnit = this.landUnits[0];\r\n\r\n    this.oneOnOneForm = this.fb.group({\r\n      attacker: this.fb.group({\r\n        unit: attacker,\r\n        carriedUnit: carriedUnit,\r\n        hp: [attackerStat.hp, [Validators.required, Validators.min(0)]],\r\n        isVeteran: false,\r\n        isBoosted: false,\r\n        freeFromRetaliation: false,\r\n      }, { validators: [maxHpValidator, carriedUnitValidator] }),\r\n      defender: this.fb.group({\r\n        unit: defender,\r\n        carriedUnit: carriedUnit,\r\n        hp: [defenderStat.hp, [Validators.required, Validators.min(0)]],\r\n        isVeteran: false,\r\n        isPoisoned: false,\r\n        withDefenseBonus: false,\r\n        withWallBonus: false\r\n      }, { validators: [maxHpValidator, carriedUnitValidator] })\r\n    });\r\n\r\n    this.oneOnOneForm.valueChanges\r\n      .pipe(\r\n        startWith(this.oneOnOneForm.value),\r\n        debounceTime(300),\r\n        takeUntil(this.onDestroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.showBattleResult();\r\n      })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  async showBattleResult() {\r\n\r\n    if (!this.oneOnOneForm.valid) {\r\n      this.battleResult = null;\r\n      this.battleResultStatistics = null;\r\n      this.resultChange.emit({ battleResults: [], battleResultStatistics: null, isInvalid: true });\r\n      return;\r\n    }\r\n\r\n    const attackerData = this.oneOnOneForm.get('attacker').value;\r\n    const defenderData = this.oneOnOneForm.get('defender').value;\r\n    const { attackDamage, defenseDamage, defenderNewHp, attackerNewHp, splashedNewHp } = calculateDamage(attackerData, defenderData);\r\n\r\n    attackerData.origHp = attackerData.hp;\r\n    attackerData.newHp = attackerNewHp;\r\n    attackerData.attackDamage = Math.min(attackDamage, defenderData.hp - defenderNewHp);\r\n\r\n    defenderData.origHp = defenderData.hp;\r\n    defenderData.newHp = defenderNewHp;\r\n    defenderData.splashedNewHp = splashedNewHp;\r\n    defenderData.defenseDamage = Math.min(defenseDamage, attackerData.hp - attackerNewHp);;\r\n\r\n\r\n    this.battleResult =  {\r\n      attacker: attackerData,\r\n      defender: defenderData\r\n    };\r\n    this.battleResultStatistics = {\r\n      attackerSurvivors: [attackerData],\r\n      defenderSurvivors: [defenderData],\r\n      defendersKilled: [],\r\n      attackersKilled: [],\r\n      unusedAttackerUnits: [],\r\n      untouchedDefenderUnits: [],\r\n      totalAttackDamage: attackerData.attackDamage,\r\n      totalDefenseDamage: defenderData.defenseDamage\r\n    };\r\n    this.resultChange.emit({ battleResults: [this.battleResult], battleResultStatistics: this.battleResultStatistics, isInvalid: false });\r\n\r\n    this.googleAnalytics.emitEvent(\r\n      'one-on-one calculate', 'method', `${attackerData.unit} vs ${defenderData.unit}`,\r\n      { attacker: attackerData, defender: defenderData }, 1);\r\n  }\r\n\r\n}\r\n\r\n","<form [formGroup]=\"oneOnOneForm\">\r\n  <ion-list>\r\n    <ion-item-divider>\r\n      <ion-title>Offense Unit</ion-title>\r\n    </ion-item-divider>\r\n    <app-unit-form formGroupName=\"attacker\" unitFormType=\"attacker\"></app-unit-form>\r\n  </ion-list>\r\n  <ion-list>\r\n    <ion-item-divider>\r\n      <ion-title>Defense Unit</ion-title>\r\n    </ion-item-divider>\r\n    <app-unit-form formGroupName=\"defender\" unitFormType=\"defender\"></app-unit-form>\r\n  </ion-list>\r\n</form>","import { Component, Input } from '@angular/core';\r\nimport { BattleResultStatistic } from 'src/app/models/battle-result.model';\r\n\r\n@Component({\r\n  selector: 'app-battle-result-mini',\r\n  templateUrl: './battle-result-mini.component.html',\r\n  styleUrls: ['./battle-result-mini.component.scss'],\r\n})\r\nexport class BattleResultMiniComponent {\r\n\r\n  @Input() battleResultStatistics: BattleResultStatistic;\r\n  @Input() isInvalid: boolean;\r\n  @Input() isExecutingBattleMatches: boolean;\r\n\r\n}\r\n","<span class=\"drag-line\"></span>\r\n<ion-text>\r\n  <h2 class=\"fight-result-text\">\r\n    <ion-thumbnail class=\"swords-icon\"><img src=\"assets/other/BigSwords.png\"/></ion-thumbnail>\r\n    Fight Result\r\n    <ion-thumbnail class=\"swords-icon\"><img src=\"assets/other/BigSwords.png\"/></ion-thumbnail>\r\n  </h2>\r\n</ion-text> \r\n<ion-text *ngIf=\"isInvalid && !isExecutingBattleMatches\" color=\"danger\" class=\"invalid-text\">\r\n  <ion-icon name=\"alert-circle-outline\"></ion-icon>\r\n  Please fix invalid inputs.\r\n</ion-text>\r\n\r\n<div class=\"loading-message\" *ngIf=\"isExecutingBattleMatches\">\r\n  <ion-spinner color=\"success\" name=\"lines\"></ion-spinner><br>\r\n  <span>Executing battle matches</span>\r\n  <br>\r\n</div>\r\n<div *ngIf=\"!isExecutingBattleMatches && battleResultStatistics\" class=\"two-column\">\r\n  <div style=\"width: 50%\">\r\n    <div class=\"summary-unit-block\" *ngFor=\"let survivor of battleResultStatistics.attackerSurvivors\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ survivor.unit }}.png\"/></ion-thumbnail>\r\n      ({{survivor.newHp}}) <ion-text color=\"danger\">{{(survivor.hp - survivor.newHp) ? '(-'+(survivor.hp - survivor.newHp)+')': ''}}</ion-text>\r\n    </div>\r\n    <div class=\"summary-unit-block\" *ngFor=\"let killed of battleResultStatistics.attackersKilled\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ killed.unit }}.png\"/></ion-thumbnail>\r\n      ({{killed.newHp}}) <ion-text color=\"danger\">(-{{killed.origHp}})</ion-text>\r\n    </div>\r\n    <div class=\"summary-unit-block\" *ngFor=\"let unused of battleResultStatistics.unusedAttackerUnits\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ unused.unit }}.png\"/></ion-thumbnail>\r\n      ({{unused.hp}}) <ion-note>(unused)</ion-note>\r\n    </div>\r\n  </div>\r\n  <div style=\"width: 50%\">\r\n    <div class=\"summary-unit-block\" *ngFor=\"let survivor of battleResultStatistics.defenderSurvivors\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ survivor.unit }}.png\"/></ion-thumbnail>\r\n      ({{survivor.newHp}}) <ion-text color=\"danger\">{{((survivor.preservedHp || survivor.origHp) - survivor.newHp) ? '(-'+((survivor.preservedHp || survivor.origHp) - survivor.newHp)+')': ''}}</ion-text>\r\n    </div>\r\n    <div class=\"summary-unit-block\" *ngFor=\"let killed of battleResultStatistics.defendersKilled\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ killed.unit }}.png\"/></ion-thumbnail>\r\n      ({{killed.newHp}}) <ion-text color=\"danger\">(-{{killed.preservedHp || killed.hp}})</ion-text>\r\n    </div>\r\n    <div class=\"summary-unit-block\" *ngFor=\"let untouched of battleResultStatistics.untouchedDefenderUnits\">\r\n      <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ untouched.unit }}.png\"/></ion-thumbnail>\r\n      ({{untouched.hp}}) <ion-note>(untouched)</ion-note>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { BattleResult, BattleResultStatistic } from '../../../models/battle-result.model';\r\n\r\n@Component({\r\n    selector: 'app-battle-result',\r\n    templateUrl: 'battle-result.component.html',\r\n    styleUrls: ['battle-result.component.scss']\r\n})\r\nexport class BattleResultComponent {\r\n    @Input() battleResults: BattleResult[];\r\n    @Input() battleResultStatistics: BattleResultStatistic;\r\n    @Input() multi: boolean;\r\n    @Input() showingOptimalResult: boolean;\r\n\r\n    getAttacker(i) {\r\n        return this.battleResults[i].attacker;\r\n    }\r\n    getDefender(i) {\r\n        return this.battleResults[i].defender;\r\n    }\r\n\r\n    getAttackDamageColor(i) {\r\n        return this.assessColor(this.getAttacker(i).attackDamage, this.getDefender(i).defenseDamage);\r\n    }\r\n\r\n    getDefenseDamageColor(i) {\r\n        return this.assessColor(this.getDefender(i).defenseDamage, this.getAttacker(i).attackDamage);\r\n    }\r\n\r\n    assessColor(statA: number, statB: number) {\r\n        if (statA > statB) {\r\n            return 'success';\r\n        } else if (statA < statB) {\r\n            return 'danger';\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getOrderSuperscript(i) {\r\n        const orderNumber = i + 1;\r\n        if (orderNumber > 10 && orderNumber < 20) {\r\n            return `th`;\r\n        } else if (orderNumber % 10 === 1) {\r\n            return `st`;\r\n        } else if (orderNumber % 10 === 2) {\r\n            return `nd`;\r\n        } else if (orderNumber % 10 === 3) {\r\n            return `rd`;\r\n        } else {\r\n            return `th`;\r\n        }\r\n    }\r\n\r\n}\r\n","<!-- <span *ngIf=\"multi\" class=\"table-title\">Battle Summary</span> -->\r\n<!-- <ion-note *ngIf=\"multi\">Note: Follow the attack moves breakdown below to achieve same result.</ion-note> -->\r\n<!-- <table *ngIf=\"multi\">\r\n  <thead>\r\n    <th scope=\"\">Offense Units</th>\r\n    <th scope=\"\">Defense Units</th>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td style=\"width: 50%\">\r\n        <h4>Survivors</h4>\r\n        <div class=\"summary-unit-block\" *ngFor=\"let survivor of battleResultStatistics.attackerSurvivors\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ survivor.unit }}.png\"/></ion-thumbnail>\r\n          ({{survivor.newHp}}) <ion-text color=\"danger\">{{(survivor.hp - survivor.newHp) ? '(-'+(survivor.hp - survivor.newHp)+')': ''}}</ion-text>\r\n        </div>\r\n        <div class=\"summary-unit-block\" *ngFor=\"let unused of battleResultStatistics.unusedAttackerUnits\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ unused.unit }}.png\"/></ion-thumbnail>\r\n          ({{unused.hp}}) <ion-note>(unused)</ion-note>\r\n        </div>\r\n        <ion-text *ngIf=\"battleResultStatistics.attackerSurvivors.length === 0 && battleResultStatistics.unusedAttackerUnits.length === 0\">\t&mdash;</ion-text>\r\n        <h4>Destroyed</h4>\r\n        <div *ngFor=\"let killed of battleResultStatistics.attackersKilled\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ killed.unit }}.png\"/></ion-thumbnail>\r\n          ({{killed.newHp}}) <ion-text color=\"danger\">(-{{killed.origHp}})</ion-text>\r\n        </div>\r\n        <ion-text *ngIf=\"battleResultStatistics.attackersKilled.length === 0\">&mdash;</ion-text>\r\n      </td>\r\n      <td style=\"width: 50%\">\r\n        <h4>Survivors</h4>\r\n        <div class=\"summary-unit-block\" *ngFor=\"let survivor of battleResultStatistics.defenderSurvivors\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ survivor.unit }}.png\"/></ion-thumbnail>\r\n          ({{survivor.newHp}}) <ion-text color=\"danger\">{{((survivor.preservedHp || survivor.origHp) - survivor.newHp) ? '(-'+((survivor.preservedHp || survivor.origHp) - survivor.newHp)+')': ''}}</ion-text>\r\n        </div>\r\n        <div class=\"summary-unit-block\" *ngFor=\"let untouched of battleResultStatistics.untouchedDefenderUnits\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ untouched.unit }}.png\"/></ion-thumbnail>\r\n          ({{untouched.hp}}) <ion-note>(untouched)</ion-note>\r\n        </div>\r\n        <ion-text *ngIf=\"battleResultStatistics.defenderSurvivors.length === 0 && battleResultStatistics.untouchedDefenderUnits.length === 0\">&mdash;</ion-text>\r\n        <h4>Destroyed</h4>\r\n        <div *ngFor=\"let killed of battleResultStatistics.defendersKilled\">\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ killed.unit }}.png\"/></ion-thumbnail>\r\n          ({{killed.newHp}}) <ion-text color=\"danger\">(-{{killed.preservedHp || killed.hp}})</ion-text>\r\n        </div>\r\n        <ion-text *ngIf=\"battleResultStatistics.defendersKilled.length === 0\">&mdash;</ion-text>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<br>\r\n<br> -->\r\n\r\n<span class=\"table-title\">Attack moves breakdown</span>\r\n<!-- <ion-note *ngIf=\"showingOptimalResult\">Note: Showing the order of attack moves that achieves most optimal results.</ion-note> -->\r\n<table>\r\n  <thead>\r\n    <th scope=\"\">Unit</th>\r\n    <th scope=\"\">Original HP</th>\r\n    <th scope=\"\">New HP</th>\r\n    <th scope=\"\">Status</th>\r\n  </thead>\r\n  <tbody>\r\n    <ng-container *ngFor=\"let br of battleResults; let i = index;\">\r\n      <tr>\r\n        <td colspan=\"4\" class=\"move-order-text\">{{i+1}}{{getOrderSuperscript(i)}} move</td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {{br.attacker.unit}} <span>(Offense)</span>\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/attacker_units/{{ br.attacker.unit }}.png\"/></ion-thumbnail>\r\n        </td>\r\n        <td>\r\n          <ion-text>{{ br.attacker.origHp }} <ion-note color=\"danger\">{{br.defender.defenseDamage > 0 ? '(-'+br.defender.defenseDamage+')' : ''}}</ion-note></ion-text>\r\n        </td>\r\n        <td>\r\n          <ion-text>{{ br.attacker.newHp }}</ion-text>\r\n        </td>\r\n        <td>\r\n          <ion-text *ngIf=\"br.attacker.newHp > 0\" color=\"success\">Survived</ion-text>\r\n          <ion-text *ngIf=\"br.attacker.newHp === 0\" color=\"danger\">Destroyed</ion-text>  \r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          {{br.defender.unit}} (Defense)\r\n          <ion-thumbnail class=\"unit-image\"><img src=\"assets/defender_units/{{ br.defender.unit }}.png\"/></ion-thumbnail>\r\n        </td>\r\n        <td>\r\n          <ion-text>{{ br.defender.origHp }} <ion-note color=\"danger\">{{br.attacker.attackDamage > 0 ? '(-'+br.attacker.attackDamage+')' : ''}}</ion-note></ion-text>\r\n        </td>\r\n        <td>\r\n          <ion-text>{{ br.defender.newHp }}</ion-text>\r\n          <ng-container *ngIf=\"br.defender.splashedNewHp\">\r\n            <br>\r\n            <ion-text>{{ br.defender.splashedNewHp }} (on splash damage)</ion-text>\r\n          </ng-container>\r\n        </td>\r\n        <td>\r\n          <ion-text *ngIf=\"br.defender.newHp > 0\" color=\"success\">Survived</ion-text>\r\n          <ion-text *ngIf=\"br.defender.newHp === 0\" color=\"danger\">Destroyed</ion-text>  \r\n        </td>\r\n      </tr>\r\n    </ng-container>\r\n\r\n  </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-donate-button',\r\n  templateUrl: './donate-button.component.html',\r\n  styleUrls: ['./donate-button.component.scss'],\r\n})\r\nexport class DonateButtonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<div class=\"currency-select\" >\r\n  <ion-label>Select currency:</ion-label>\r\n  <ion-select interface=\"action-sheet\" [interfaceOptions]=\"{header: 'Select Unit'}\" #select value=\"Q2Z5D48F4YMXL\">\r\n    <ion-select-option value=\"52CNVTXALEQXL\">AUD $</ion-select-option>\r\n    <ion-select-option value=\"P4Z2NJR2QRMQJ\">BRL R$</ion-select-option>\r\n    <ion-select-option value=\"YL3YTLC7QWREJ\">CAD $</ion-select-option>\r\n    <ion-select-option value=\"UJX3JEYNVPZ4W\">CHF Fr.</ion-select-option>\r\n    <ion-select-option value=\"TYGY99HRPWJ4A\">CZK Kč</ion-select-option>\r\n    <ion-select-option value=\"3YP34QNUFWA6Q\">DKK kr.</ion-select-option>\r\n    <ion-select-option value=\"KCCND26B7RZ2E\">EUR €</ion-select-option>\r\n    <ion-select-option value=\"WK6FFCMNAMENQ\">GBP £</ion-select-option>\r\n    <ion-select-option value=\"L69898APZD5HU\">HKD $</ion-select-option>\r\n    <ion-select-option value=\"UXGG6LV6UMTA8\">HUF Ft</ion-select-option>\r\n    <ion-select-option value=\"XR2YFSVCDUMSC\">ILS ₪</ion-select-option>\r\n    <ion-select-option value=\"Y2LW58MN7MYBY\">JPY ‎¥‎</ion-select-option>\r\n    <ion-select-option value=\"FMABDARCXQFCJ\">‎MXN $‎</ion-select-option>\r\n    <ion-select-option value=\"XDHWYJWRUPEC8\">NOK kr</ion-select-option>\r\n    <ion-select-option value=\"HJSHMTDBF5Z5A\">NZD $</ion-select-option>\r\n    <ion-select-option value=\"TBE58BFGVVVLN\">‎PHP ₱</ion-select-option>\r\n    <ion-select-option value=\"JBUWFSGNLEYVY\">PLN gr</ion-select-option>\r\n    <ion-select-option value=\"LAQXFNFMJ8U9S\">RUB ₽</ion-select-option>\r\n    <ion-select-option value=\"EDX9FZXEFQYGY\">SEK kr</ion-select-option>\r\n    <ion-select-option value=\"QR4M289JUZ4SU\">SGD $</ion-select-option>\r\n    <ion-select-option value=\"44CPPATC3T8HC\">THB ฿</ion-select-option>\r\n    <ion-select-option value=\"U5B3VTYBQKQM8\">TWD $</ion-select-option>\r\n    <ion-select-option value=\"Q2Z5D48F4YMXL\">USD $</ion-select-option>\r\n  </ion-select>\r\n</div>\r\n<form class=\"paypal-form\" ngNoForm action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_top\">\r\n  <input type=\"hidden\" name=\"hosted_button_id\" [value]=\"select.value\" />\r\n  <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n  <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UnitFormComponent } from './unit-form/unit-form.component';\r\nimport { BattleResultComponent } from './battle-result/battle-result.component';\r\nimport { DonateButtonComponent } from './donate-button/donate-button.component';\r\nimport { BattleResultMiniComponent } from './battle-result-mini/battle-result-mini.component';\r\n\r\n@NgModule({\r\n  declarations: [UnitFormComponent, BattleResultComponent, BattleResultMiniComponent, DonateButtonComponent],\r\n  exports: [UnitFormComponent, BattleResultComponent, BattleResultMiniComponent, DonateButtonComponent],\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ControlContainer, UntypedFormGroup } from '@angular/forms';\r\nimport { IonInput } from '@ionic/angular';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { UnitFormType } from 'src/app/models/unit-data.model';\r\nimport { calculateMaxHp } from 'src/app/utils/calculate-max-hp.util';\r\nimport { attackerUnits, defenderUnits, landUnits, carryUnits, longRangeUnits } from '../../../data/unit-list.const';\r\nimport { unitStats } from '../../../data/unit-stats.const';\r\n\r\n@Component({\r\n  selector: 'app-unit-form',\r\n  templateUrl: './unit-form.component.html',\r\n  styleUrls: ['./unit-form.component.scss'],\r\n})\r\nexport class UnitFormComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() unitFormType: UnitFormType;\r\n  @Input() multi: boolean;\r\n  @ViewChild('hpInputComponent', { static: true }) hpInputComponent: IonInput;\r\n  @ViewChild('countInputComponent') countInputComponent: IonInput;\r\n\r\n  unitOptions: string[];\r\n  carriedUnitOptions: string[] = landUnits;\r\n  form: UntypedFormGroup;\r\n  maxHp: number;\r\n\r\n  private onDestroy$ = new Subject<void>();\r\n\r\n  constructor(private controlContainer: ControlContainer) { }\r\n\r\n  ngOnInit() {\r\n    const isAttackerFormType = this.unitFormType === UnitFormType.ATTACKER;\r\n    this.unitOptions = isAttackerFormType ? attackerUnits : defenderUnits;\r\n    this.form = this.controlContainer.control as UntypedFormGroup;\r\n    this.setMaxHp();\r\n\r\n    const hpInput = this.form.get('hp')\r\n    this.form.get('isVeteran').valueChanges\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(() => {\r\n        this.setMaxHp();\r\n        if (hpInput.pristine || !hpInput.valid) {\r\n          this.form.get('hp').reset(this.maxHp);\r\n        }\r\n      });\r\n\r\n    merge(\r\n      this.form.get('unit').valueChanges,\r\n      this.form.get('carriedUnit').valueChanges\r\n    )\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(() => {\r\n        this.setMaxHp();\r\n        hpInput.reset(this.maxHp, { emitEvent: false });\r\n        if (this.isDefenderForm) {\r\n          this.form.get('isPoisoned').reset(false, { emitEvent: false });\r\n        } else {\r\n          this.form.get('isBoosted').reset(false, { emitEvent: false });\r\n        }\r\n        this.form.get('isVeteran') && this.form.get('isVeteran').reset(false, { emitEvent: false });\r\n        this.form.get('withDefenseBonus') && this.form.get('withDefenseBonus').reset(false, { emitEvent: false });\r\n        this.form.get('withWallBonus') && this.form.get('withWallBonus').reset(false, { emitEvent: false });\r\n        this.form.updateValueAndValidity();\r\n      });\r\n\r\n    if (isAttackerFormType) {\r\n      this.form.get('unit').valueChanges\r\n        .pipe(takeUntil(this.onDestroy$))\r\n        .subscribe((unit) => {\r\n          if (longRangeUnits.includes(unit)) {\r\n            this.form.get('freeFromRetaliation').setValue(true);\r\n          } else {\r\n            this.form.get('freeFromRetaliation').setValue(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  get selectedUnit() {\r\n    return this.form.get('unit').value;\r\n  }\r\n\r\n  get selectedCarriedUnit() {\r\n    return this.form.get('carriedUnit').value;\r\n  }\r\n\r\n  get hasVeterance() {\r\n    if (this.hasCarrySkill) {\r\n      // if unit carries another unit, check the carried unit veterance\r\n      const carriedUnit = this.form.get('carriedUnit').value;\r\n      return unitStats[carriedUnit].veteranHp;\r\n    }\r\n    return unitStats[this.selectedUnit].veteranHp;\r\n  }\r\n\r\n  get isPoisoned() {\r\n    return this.form.get('isPoisoned').value;\r\n  }\r\n\r\n  get hasDefenseBonus() {\r\n    return unitStats[this.selectedUnit].defenseBonus;\r\n  }\r\n\r\n  get hasWallDefenseBonus() {\r\n    return unitStats[this.selectedUnit].wallBonus;\r\n  }\r\n\r\n  get hasCarrySkill() {\r\n    return carryUnits.includes(this.selectedUnit);\r\n  }\r\n\r\n  get isLongRangeUnit() {\r\n    return longRangeUnits.includes(this.selectedUnit);\r\n  }\r\n\r\n  get isDefenderForm() {\r\n    return this.unitFormType === UnitFormType.DEFENDER;\r\n  }\r\n  \r\n  setMaxHp() {\r\n    this.maxHp = calculateMaxHp(this.form.getRawValue());\r\n  }\r\n\r\n  decreaseHp() {\r\n    const hpInput = this.form.get('hp');\r\n    const curValue = hpInput.value || 0;\r\n    if (curValue > 0) {\r\n      hpInput.setValue(parseInt(curValue, 10) - 1);\r\n      hpInput.updateValueAndValidity();\r\n      // (await this.hpInputComponent.getInputElement()).focus();\r\n    }\r\n  }\r\n\r\n  increaseHp() {\r\n    const hpInput = this.form.get('hp');\r\n    const curValue = hpInput.value || 0;\r\n    hpInput.setValue(parseInt(curValue, 10) + 1);\r\n    hpInput.updateValueAndValidity();\r\n    // (await this.hpInputComponent.getInputElement()).focus();\r\n  }\r\n\r\n  decreaseSpawnCount() {\r\n    const countInput = this.form.get('spawnCount');\r\n    const curValue = countInput.value || 0;\r\n    if (curValue > 0) {\r\n      countInput.setValue(parseInt(curValue, 10) - 1);\r\n      countInput.updateValueAndValidity();\r\n      // (await this.countInputComponent.getInputElement()).focus();\r\n    }\r\n  }\r\n\r\n  increaseSpawnCount() {\r\n    const countInput = this.form.get('spawnCount');\r\n    const curValue = countInput.value || 0;\r\n    countInput.setValue(parseInt(curValue, 10) + 1);\r\n    countInput.updateValueAndValidity();\r\n    // (await this.countInputComponent.getInputElement()).focus();\r\n  }\r\n\r\n  async selectText(event) {\r\n    const input = await event.target.getInputElement();\r\n    input.select();\r\n  }\r\n}\r\n","<ion-item-group [formGroup]=\"form\">\r\n  <ion-item tappable>\r\n    <ion-label>\r\n      Unit\r\n    </ion-label>\r\n    <ion-img class=\"unit-image\" *ngIf=\"selectedUnit\" src=\"/assets/{{unitFormType}}_units/{{selectedUnit}}.png\"></ion-img>\r\n    <ion-select tappable formControlName=\"unit\" interface=\"action-sheet\" [interfaceOptions]=\"{header: 'Select Unit', cssClass: unitFormType + '-unit-option'}\">\r\n      <ion-select-option *ngFor=\"let unitOption of unitOptions\" [value]=\"unitOption\">\r\n        {{ unitOption }}\r\n      </ion-select-option>\r\n    </ion-select>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"hasCarrySkill\">\r\n    <ion-label>\r\n      Carried Unit\r\n    </ion-label>\r\n    <ion-img class=\"unit-image\" *ngIf=\"selectedCarriedUnit\" src=\"/assets/{{unitFormType}}_units/{{selectedCarriedUnit}}.png\"></ion-img>\r\n    <ion-select tappable formControlName=\"carriedUnit\" interface=\"action-sheet\" [interfaceOptions]=\"{header: 'Select Unit', cssClass: unitFormType + '-carried-unit-option'}\">\r\n      <ion-select-option *ngFor=\"let carriedUnitOption of carriedUnitOptions\" [value]=\"carriedUnitOption\">\r\n        {{ carriedUnitOption }}\r\n      </ion-select-option>\r\n    </ion-select>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"hasVeterance\">\r\n    <ion-label>Is veteran?</ion-label>\r\n    <ion-checkbox tappable slot=\"end\" formControlName=\"isVeteran\"></ion-checkbox>\r\n  </ion-item>\r\n\r\n  <ion-item tappable>\r\n    <ion-label>HP <ion-note *ngIf=\"maxHp\" inputmode=\"numeric\">(Max: {{ maxHp }})</ion-note></ion-label>\r\n    <div slot=\"end\" class=\"range-arrows-container ion-activatable ripple-parent\">\r\n      <ion-icon tappable slot=\"end\" class=\"input-hp-arrow\" src=\"/assets/chevron-back-outline.svg\" (click)=\"decreaseHp()\"></ion-icon>\r\n      <ion-ripple-effect></ion-ripple-effect>\r\n    </div>\r\n    <ion-input slot=\"end\" tappable  class=\"input-hp\" type=\"text\" formControlName=\"hp\" (ionFocus)=\"selectText($event)\"\r\n      (contextmenu)=\"$event.preventDefault()\" inputmode=\"numeric\" enterkeyhint=\"done\" pattern=\"^([0-9])+$\" #hpInputComponent></ion-input>\r\n    <div slot=\"end\" class=\"range-arrows-container ion-activatable ripple-parent\">\r\n        <ion-icon tappable class=\"input-hp-arrow\" src=\"/assets/chevron-forward-outline.svg\" (click)=\"increaseHp()\"></ion-icon>\r\n      <ion-ripple-effect></ion-ripple-effect>\r\n    </div>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"multi\">\r\n    <ion-label>Spawn count</ion-label>\r\n    <div slot=\"end\" class=\"range-arrows-container ion-activatable ripple-parent\">\r\n      <ion-icon tappable slot=\"end\" class=\"input-count-arrow\" src=\"/assets/chevron-back-outline.svg\" (click)=\"decreaseSpawnCount()\"></ion-icon>\r\n      <ion-ripple-effect></ion-ripple-effect>\r\n    </div>\r\n    <ion-input tappable slot=\"end\"  class=\"input-count\" type=\"text\" formControlName=\"spawnCount\" (ionFocus)=\"selectText($event)\"\r\n      (contextmenu)=\"$event.preventDefault()\" inputmode=\"numeric\" enterkeyhint=\"done\" pattern=\"^([0-9])+$\" #countInputComponent></ion-input>\r\n    <div slot=\"end\" class=\"range-arrows-container ion-activatable ripple-parent\">\r\n        <ion-icon tappable slot=\"end\" class=\"input-count-arrow\" src=\"/assets/chevron-forward-outline.svg\" (click)=\"increaseSpawnCount()\"></ion-icon>\r\n      <ion-ripple-effect></ion-ripple-effect>\r\n    </div>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"isLongRangeUnit && !isDefenderForm\">\r\n    <ion-label>Free from retaliation?</ion-label>\r\n    <ion-checkbox tappable slot=\"end\" formControlName=\"freeFromRetaliation\"></ion-checkbox>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"!isDefenderForm\">\r\n    <ion-label>Is boosted?</ion-label>\r\n    <ion-checkbox tappable slot=\"end\" formControlName=\"isBoosted\"></ion-checkbox>\r\n  </ion-item>\r\n\r\n  <ion-item tappable *ngIf=\"isDefenderForm\">\r\n    <ion-label>Is poisoned?</ion-label>\r\n    <ion-checkbox tappable slot=\"end\" formControlName=\"isPoisoned\"></ion-checkbox>\r\n  </ion-item>\r\n\r\n  <ion-radio-group *ngIf=\"isDefenderForm && !isPoisoned\" formControlName=\"withDefenseBonus\" [allowEmptySelection]=\"true\">\r\n    <ion-item tappable *ngIf=\"hasDefenseBonus\">\r\n      <ion-label>1.5 &times; Def bonus <ion-note>(City/Forest/Mountain/Ocean)</ion-note></ion-label>\r\n      <ion-radio tappable slot=\"end\" value=\"withoutWall\"></ion-radio>\r\n    </ion-item>\r\n\r\n    <ion-item tappable *ngIf=\"hasWallDefenseBonus\">\r\n      <ion-label>4 &times; Def bonus <ion-note>(City Wall)</ion-note></ion-label>\r\n      <ion-radio tappable slot=\"end\" value=\"withWall\"></ion-radio>\r\n    </ion-item>\r\n  </ion-radio-group>\r\n\r\n\r\n\r\n</ion-item-group>","import { Injectable } from '@angular/core';\r\n\r\n// tslint:disable-next-line: ban-types\r\ndeclare let gtag: Function;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GoogleAnalyticsService {\r\n\r\n    public emitEvent(eventName: string, eventCategory: string, eventLabel: string = null, eventParams?: object, eventValue: number = null) {\r\n        gtag('event', eventName, {\r\n            event_category: eventCategory,\r\n            event_label: eventLabel,\r\n            event_params: eventParams,\r\n            event_value: eventValue\r\n        });\r\n    }\r\n}\r\n","import { UntypedFormGroup, ValidationErrors } from '@angular/forms';\r\nimport { carryUnits } from '../data/unit-list.const';\r\n\r\nexport function carriedUnitValidator(fg: UntypedFormGroup): ValidationErrors {\r\n    const unit = fg.get('unit').value;\r\n    if (carryUnits.includes(unit) && !fg.get('carriedUnit').value) {\r\n        return { required: true, name: 'carriedUnit' };\r\n    }\r\n    return null;\r\n}\r\n","import { UntypedFormGroup, ValidationErrors } from '@angular/forms';\r\nimport { calculateMaxHp } from '../utils/calculate-max-hp.util';\r\n\r\nexport function maxHpValidator(fg: UntypedFormGroup): ValidationErrors {\r\n    const maxHp = calculateMaxHp(fg.value);\r\n    const hp = fg.get('hp').value;\r\n    if (hp <= maxHp) {\r\n        return null;\r\n    }\r\n\r\n    const errors = { max: true };\r\n    fg.get('hp').setErrors(errors);\r\n    return errors;\r\n}","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n","import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n","/**\n * @license Angular v14.2.7\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, ɵparseCookieValue, XhrFactory as XhrFactory$1 } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const key = name.toLowerCase();\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            this.headers.get(key).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    assertValidHeaders(headers);\n                }\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    let values = headers[name];\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or override for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n    for (const [key, value] of Object.entries(headers)) {\n        if (typeof value !== 'string' && !Array.isArray(value)) {\n            throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` +\n                `Expecting either a string or an array, but got: \\`${value}\\`.`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n        // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n        // may start with the `?` char, so we strip it if it's present.\n        const params = rawParams.replace(/^\\?/, '').split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n    '40': '@',\n    '3A': ':',\n    '24': '$',\n    '2C': ',',\n    '3B': ';',\n    '3D': '=',\n    '3F': '?',\n    '2F': '/',\n};\nfunction standardEncoding(v) {\n    return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n    return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    constructor(options = {}) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                const value = options.fromObject[key];\n                // convert the values to strings\n                const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n                this.map.set(key, values);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Constructs a new body with appended values for the given parameter name.\n     * @param params parameters and values\n     * @return A new body with the new value.\n     */\n    appendAll(params) {\n        const updates = [];\n        Object.keys(params).forEach(param => {\n            const value = params[param];\n            if (Array.isArray(value)) {\n                value.forEach(_value => {\n                    updates.push({ param, value: _value, op: 'a' });\n                });\n            }\n            else {\n                updates.push({ param, value: value, op: 'a' });\n            }\n        });\n        return this.clone(updates);\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter(param => param !== '')\n            .join('&');\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat(update);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(valueToString(update.value));\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(valueToString(update.value));\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n    constructor(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```typescript\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n    constructor() {\n        this.map = new Map();\n    }\n    /**\n     * Store a value in the context. If a value is already present it will be overwritten.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     * @param value The value to store.\n     *\n     * @returns A reference to itself for easy chaining.\n     */\n    set(token, value) {\n        this.map.set(token, value);\n        return this;\n    }\n    /**\n     * Retrieve the value associated with the given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns The stored value or default if one is defined.\n     */\n    get(token) {\n        if (!this.map.has(token)) {\n            this.map.set(token, token.defaultValue());\n        }\n        return this.map.get(token);\n    }\n    /**\n     * Delete the value associated with the given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns A reference to itself for easy chaining.\n     */\n    delete(token) {\n        this.map.delete(token);\n        return this;\n    }\n    /**\n     * Checks for existence of a given token.\n     *\n     * @param token The reference to an instance of `HttpContextToken`.\n     *\n     * @returns True if the token exists, false otherwise.\n     */\n    has(token) {\n        return this.map.has(token);\n    }\n    /**\n     * @returns a list of tokens currently stored in the context.\n     */\n    keys() {\n        return this.map.keys();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n    return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.context) {\n                this.context = options.context;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no context have been passed in, construct a new HttpContext instance.\n        if (!this.context) {\n            this.context = new HttpContext();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            isUrlSearchParams(this.body) || typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, boolean and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            typeof this.body === 'boolean') {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Pass on context if needed\n        const context = update.context ?? this.context;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            context,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200 /* HttpStatusCode.Ok */, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        context: options.context,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nclass HttpClient {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers,\n                context: options.context,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = events$.pipe(filter((event) => event instanceof HttpResponse));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilities of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClient, deps: [{ token: HttpHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nHttpClient.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClient });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClient, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: HttpHandler }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NoopInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNoopInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NoopInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: NoopInterceptor, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n        /**\n         * A resolved promise that can be used to schedule microtasks in the event handlers.\n         */\n        this.resolvedPromise = Promise.resolve();\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Check the request headers. JSONP doesn't support headers and\n        // cannot set any that were supplied.\n        if (req.headers.keys().length > 0) {\n            throw new Error(JSONP_ERR_HEADERS_NOT_SUPPORTED);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = (event) => {\n                // We wrap it in an extra Promise, to ensure the microtask\n                // is scheduled after the loaded endpoint has executed any potential microtask itself,\n                // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n                this.resolvedPromise.then(() => {\n                    // Cleanup the page.\n                    cleanup();\n                    // Check whether the response callback has run.\n                    if (!finished) {\n                        // It hasn't, something went wrong with the request. Return an error via\n                        // the Observable error path. All JSONP errors have status 0.\n                        observer.error(new HttpErrorResponse({\n                            url,\n                            status: 0,\n                            statusText: 'JSONP Error',\n                            error: new Error(JSONP_ERR_NO_CALLBACK),\n                        }));\n                        return;\n                    }\n                    // Success. body either contains the response body or null if none was\n                    // returned.\n                    observer.next(new HttpResponse({\n                        body,\n                        status: 200 /* HttpStatusCode.Ok */,\n                        statusText: 'OK',\n                        url,\n                    }));\n                    // Complete the stream, the response is over.\n                    observer.complete();\n                });\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                if (!finished) {\n                    this.removeListeners(node);\n                }\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n    removeListeners(script) {\n        // Issue #34818\n        // Changing <script>'s ownerDocument will prevent it from execution.\n        // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n        if (!foreignDocument) {\n            foreignDocument = this.document.implementation.createHTMLDocument();\n        }\n        foreignDocument.adoptNode(script);\n    }\n}\nJsonpClientBackend.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpClientBackend, deps: [{ token: JsonpCallbackContext }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nJsonpClientBackend.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpClientBackend });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpClientBackend, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpInterceptor, deps: [{ token: JsonpClientBackend }], target: i0.ɵɵFactoryTarget.Injectable });\nJsonpInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: JsonpInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: JsonpClientBackend }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the HttpClientJsonpModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without HttpClientJsonpModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status: xhr.status, statusText, url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            const onLoad = () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                let body = null;\n                if (status !== 204 /* HttpStatusCode.NoContent */) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 /* HttpStatusCode.Ok */ : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            const onError = (error) => {\n                const { url } = partialFromXhr();\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progress event.\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            const onUpProgress = (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            xhr.addEventListener('timeout', onError);\n            xhr.addEventListener('abort', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('abort', onError);\n                xhr.removeEventListener('load', onLoad);\n                xhr.removeEventListener('timeout', onError);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                if (xhr.readyState !== xhr.DONE) {\n                    xhr.abort();\n                }\n            };\n        });\n    }\n}\nHttpXhrBackend.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXhrBackend, deps: [{ token: i1.XhrFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nHttpXhrBackend.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXhrBackend });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXhrBackend, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.XhrFactory }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfCookieExtractor, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: XSRF_COOKIE_NAME }], target: i0.ɵɵFactoryTarget.Injectable });\nHttpXsrfCookieExtractor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfCookieExtractor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfCookieExtractor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [XSRF_COOKIE_NAME]\n                }] }]; } });\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfInterceptor, deps: [{ token: HttpXsrfTokenExtractor }, { token: XSRF_HEADER_NAME }], target: i0.ɵɵFactoryTarget.Injectable });\nHttpXsrfInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpXsrfInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: HttpXsrfTokenExtractor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [XSRF_HEADER_NAME]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    handle(req) {\n        if (this.chain === null) {\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpInterceptingHandler, deps: [{ token: HttpBackend }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nHttpInterceptingHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpInterceptingHandler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpInterceptingHandler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: HttpBackend }, { type: i0.Injector }]; } });\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientXsrfModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHttpClientXsrfModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientXsrfModule, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientXsrfModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        HttpXsrfInterceptor,\n                        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                    ],\n                }]\n        }] });\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHttpClientModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientModule, imports: [HttpClientXsrfModule] });\nHttpClientModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientModule, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n    ], imports: [HttpClientXsrfModule.withOptions({\n            cookieName: 'XSRF-TOKEN',\n            headerName: 'X-XSRF-TOKEN',\n        })] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    /**\n                     * Optional configuration for XSRF protection.\n                     */\n                    imports: [\n                        HttpClientXsrfModule.withOptions({\n                            cookieName: 'XSRF-TOKEN',\n                            headerName: 'X-XSRF-TOKEN',\n                        }),\n                    ],\n                    /**\n                     * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                     * with supporting services for HTTP communications.\n                     */\n                    providers: [\n                        HttpClient,\n                        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                        HttpXhrBackend,\n                        { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    ],\n                }]\n        }] });\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientJsonpModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHttpClientJsonpModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientJsonpModule, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.7\", ngImport: i0, type: HttpClientJsonpModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        JsonpClientBackend,\n                        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n * @see `XhrFactory`\n * @deprecated\n * `XhrFactory` has moved, please import `XhrFactory` from `@angular/common` instead.\n */\nconst XhrFactory = XhrFactory$1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler };\n"],"names":["ChangeDetectorRef","ElementRef","IonContent","IonSlides","IonSegment","ModalController","BattleComponent","BrModalComponent","i0","ctx_r5","ctx_r7","ctx_r4","BattleCalculatorPage","constructor","cdr","modalController","elRef","parseInt","localStorage","getItem","allowTouchMove","autoHeight","ngOnInit","ngAfterViewInit","onOneOnOneChange","data","oneOnOneData","onBattleChange","battleData","onCodeChange","codeData","scrollToBattleResult","isOneOnOne","ionContent","scrollToBottom","battleResultEl","nativeElement","querySelector","scrollIntoView","behavior","block","inline","isExecutingBattleMatches","battleComponent","activeSlideIndex","isBattle","isCode","resultData","onSlideChange","ionSlides","getActiveIndex","setItem","showBattleResultModal","event","preventDefault","stopPropagation","isShowingModalInProgress","isInvalid","multi","modal","create","component","cssClass","mode","componentProps","swipeToClose","showBackdrop","backdropDismiss","present","onSegmentChange","slideTo","detail","value","selectors","viewQuery","ctx","EventEmitter","UntypedFormBuilder","Validators","Subject","debounceTime","startWith","takeUntil","attackerUnits","ATTACKER_UNITS","defenderUnits","DEFENDER_UNITS","landUnits","LAND_UNITS","maxHpValidator","calculateDamage","unitStats","carriedUnitValidator","GoogleAnalyticsService","OneOnOneComponent","fb","googleAnalytics","attacker","attackerStat","defender","defenderStat","carriedUnit","oneOnOneForm","group","unit","hp","required","min","isVeteran","isBoosted","freeFromRetaliation","validators","isPoisoned","withDefenseBonus","withWallBonus","valueChanges","pipe","onDestroy$","subscribe","showBattleResult","ngOnDestroy","next","complete","valid","battleResult","battleResultStatistics","resultChange","emit","battleResults","attackerData","get","defenderData","attackDamage","defenseDamage","defenderNewHp","attackerNewHp","splashedNewHp","origHp","newHp","Math","attackerSurvivors","defenderSurvivors","defendersKilled","attackersKilled","unusedAttackerUnits","untouchedDefenderUnits","totalAttackDamage","totalDefenseDamage","emitEvent","outputs","decls","vars","consts","template","ControlContainer","IonInput","merge","UnitFormType","calculateMaxHp","carryUnits","longRangeUnits","$event","UnitFormComponent","controlContainer","isAttackerFormType","unitFormType","ATTACKER","unitOptions","form","control","setMaxHp","hpInput","pristine","reset","maxHp","isDefenderForm","updateValueAndValidity","includes","setValue","selectedUnit","selectedCarriedUnit","hasVeterance","hasCarrySkill","veteranHp","hasDefenseBonus","defenseBonus","hasWallDefenseBonus","wallBonus","isLongRangeUnit","DEFENDER","getRawValue","decreaseHp","curValue","increaseHp","decreaseSpawnCount","countInput","increaseSpawnCount","selectText","input","target","getInputElement","select","Subscriber","async","dueTime","scheduler","source","lift","DebounceTimeOperator","call","subscriber","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","_next","clearDebounce","add","schedule","dispatchNext","_complete","debouncedNext","remove","unsubscribe","innerSubscribe","SimpleInnerSubscriber","SimpleOuterSubscriber","notifier","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","notifierSubscription","seenValue","notifyNext","notifyComplete","i1","DOCUMENT","ɵparseCookieValue","XhrFactory","XhrFactory$1","Injectable","InjectionToken","Inject","PLATFORM_ID","NgModule","of","Observable","concatMap","filter","map","HttpHandler","HttpBackend","HttpHeaders","headers","normalizedNames","Map","lazyUpdate","lazyInit","split","forEach","line","index","indexOf","name","slice","key","toLowerCase","trim","maybeSetNormalizedName","has","push","set","ngDevMode","assertValidHeaders","Object","keys","values","length","init","Array","from","getAll","append","clone","op","delete","lcName","copyFrom","update","applyUpdate","other","concat","base","undefined","toDelete","existing","fn","entries","isArray","Error","HttpUrlEncodingCodec","encodeKey","standardEncoding","encodeValue","decodeKey","decodeURIComponent","decodeValue","paramParser","rawParams","codec","params","replace","param","eqIdx","val","list","STANDARD_ENCODING_REGEX","STANDARD_ENCODING_REPLACEMENTS","v","encodeURIComponent","s","t","valueToString","HttpParams","options","updates","cloneFrom","encoder","fromString","fromObject","res","appendAll","_value","toString","eKey","join","idx","splice","HttpContextToken","defaultValue","HttpContext","token","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","isUrlSearchParams","URLSearchParams","HttpRequest","url","third","fourth","body","reportProgress","withCredentials","responseType","toUpperCase","context","urlWithParams","qIdx","sep","serializeBody","JSON","stringify","detectContentTypeHeader","type","setHeaders","reduce","setParams","HttpEventType","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","ResponseHeader","HttpResponse","Response","HttpErrorResponse","message","error","addBody","observe","HttpClient","handler","request","first","req","events$","handle","res$","head","jsonp","callbackParam","patch","post","put","ɵfac","ɵprov","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","nextRequestId","foreignDocument","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONP_ERR_WRONG_RESPONSE_TYPE","JSONP_ERR_HEADERS_NOT_SUPPORTED","JsonpCallbackContext","JsonpClientBackend","callbackMap","document","resolvedPromise","Promise","resolve","nextCallback","observer","callback","node","createElement","src","finished","cleanup","parentNode","removeChild","onLoad","then","onError","addEventListener","appendChild","Sent","removeListeners","script","implementation","createHTMLDocument","adoptNode","decorators","args","JsonpInterceptor","XSSI_PREFIX","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","HttpXhrBackend","xhrFactory","build","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","originalBody","parse","text","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","total","partialText","onUpProgress","progress","UploadProgress","upload","send","removeEventListener","readyState","DONE","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","getToken","cookieString","cookie","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","HttpInterceptingHandler","backend","injector","chain","interceptors","reduceRight","Injector","interceptingHandler","jsonpCallbackContext","window","HttpClientXsrfModule","disable","ngModule","providers","provide","useClass","withOptions","useValue","ɵmod","ɵinj","useExisting","HttpClientModule","imports","HttpClientJsonpModule","useFactory","ɵHttpInterceptingHandler"],"sourceRoot":"webpack:///","x_google_ignoreList":[28,29,30]}